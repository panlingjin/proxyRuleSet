# url 里填写自己的订阅,名称不能重复
proxy-providers:
  守候网络:
    url: ""
    type: http
    interval: 86400
    health-check:
      {
        enable: true,
        url: "https://www.gstatic.com/generate_204",
        interval: 300,
      }
    proxy: 直连
    exclude-filter: "2.00x"

log-level: warning
mode: rule
find-process-mode: off
ipv6: false
unified-delay: true
tcp-concurrent: true
keep-alive-idle: 600
keep-alive-interval: 15
external-ui: /etc/mihomo/ui
external-ui-name: zashboard
external-ui-url: https://github.com/Zephyruso/zashboard/releases/latest/download/dist-cdn-fonts.zip
external-controller: '[::]:9090'
secret: ""
allow-lan: true
port: 8080
socks-port: 1080
mixed-port: 7890
redir-port: 7891
tproxy-port: 7892

# 域名嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]

dns:
  enable: true
  listen: '[::]:1053'
  ipv6: false
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - +.lan
    - +.local
    - GEOSITE:cn
  fake-ip-filter-mode: blacklist
  respect-rules: true
  default-nameserver:
    - 192.168.10.10
    - 223.5.5.5
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
    - https://223.6.6.6/dns-query
  nameserver:
    - 192.168.10.10
  nameserver-policy:
    geosite:private,cn:
      - 192.168.10.10
    rule-set:apple_domain:
      - 192.168.10.10
    geosite:geolocation-!cn:
      - https://8.8.8.8/dns-query
      - https://1.1.1.1/dns-query
profile:
  store-selected: true
  store-fake-ip: true


tun:
  enable: true
  device: nikki
  stack: mixed
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  mtu: 9000
  gso: true
  gso-max-size: 65536

# geo 数据
geodata-mode: false
geodata-loader: standard
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"
geo-auto-update: true
geo-update-interval: 48

proxies:
  - name: "直连"
    type: direct
    udp: true

pr:
  &pr {
    type: select,
    proxies:
      [
        节点选择,
        香港自动,
        香港手动,
        新加坡自动,
        新加坡手动,
        台湾,
        日本,
        美国,
        手动切换,
        直连,
      ],
  }

  # p: &p {type: url-test, include-all: true, tolerance: 20, interval: 300}

proxy-groups:
  - name: 节点选择
    type: select
    proxies:
      [
        香港自动,
        香港手动,
        新加坡自动,
        新加坡手动,
        台湾,
        日本,
        美国,
        手动切换,
        直连,
      ]
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Flight.png"

  - name: Telegram
    <<: *pr
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Telegram.png"

  - name: YouTube
    <<: *pr
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/YouTube.png"

  - name: NETFLIX
    <<: *pr
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Netflix.png"

  - name: Disney
    <<: *pr
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Disney.png"

  - name: 守候影院
    type: select
    include-all: true
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Emby.png"

  - name: OpenAi
    <<: *pr
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/ChatGPT.png"

  - name: 游戏平台
    <<: *pr
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Steam.png"

  - name: Microsoft
    <<: *pr
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Microsoft.png"

  - name: Spotify
    <<: *pr
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Spotify.png"

  - name: Speedtest
    <<: *pr
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/SpeedTest.png"

  - name: 漏网之鱼
    <<: *pr
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Fish.png"

  #分隔,下面是地区分组
  - name: 香港自动
    type: url-test
    include-all: true
    tolerance: 50
    interval: 300
    filter: "(?i)港|hk|hongkong|hong kong"
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Hong_Kong.png"

  - name: 香港手动
    type: select
    include-all: true
    filter: "(?i)港|hk|hongkong|hong kong"
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Hong_Kong.png"

  - name: 新加坡自动
    type: url-test
    include-all: true
    tolerance: 50
    interval: 300
    filter: "(?i)(新|sg|singapore)"
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Singapore.png"

  - name: 新加坡手动
    type: select
    include-all: true
    filter: "(?i)(新|sg|singapore)"
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Singapore.png"

  - name: 台湾
    type: url-test
    include-all: true
    tolerance: 50
    interval: 300
    filter: "(?i)台|tw|taiwan"
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Taiwan_Province.png"

  - name: 日本
    type: url-test
    interval: 300
    tolerance: 50
    include-all: true
    filter: "(?i)日|jp|japan"
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Japan.png"

  - name: 美国
    type: url-test
    interval: 300
    tolerance: 50
    include-all: true
    filter: "(?i)美|us|unitedstates|united states"
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/USA.png"

  - name: 手动切换
    type: select
    include-all: true
    icon: "https://raw.githubusercontent.com/Vbaethon/HOMOMIX/main/Icon/Color/Large/Global.png"

rules:
  - RULE-SET,private_ip,直连,no-resolve
  - RULE-SET,private_domain,直连
  - RULE-SET,direct_domain,直连
  - RULE-SET,apple_domain,直连
  - RULE-SET,shouhou,守候影院
  - RULE-SET,proxylite,节点选择
  - RULE-SET,github_domain,节点选择
  - RULE-SET,openai_domain,OpenAi
  - RULE-SET,youtube_domain,YouTube
  - RULE-SET,microsoft_domain,Microsoft
  - RULE-SET,telegram_domain,Telegram
  - RULE-SET,twitter_domain,节点选择
  - RULE-SET,netflix_domain,NETFLIX
  - RULE-SET,disney_domain,Disney
  - RULE-SET,epic_domain,游戏平台
  - RULE-SET,steam_domain,游戏平台
  - RULE-SET,spotify_domain,Spotify
  - RULE-SET,speedtest_domain,Speedtest
  - RULE-SET,geolocation-!cn,节点选择
  - RULE-SET,cn_domain,直连
    # IP
  - RULE-SET,netflix_ip,NETFLIX,no-resolve
  - RULE-SET,telegram_ip,Telegram,no-resolve
  - RULE-SET,twitter_ip,节点选择,no-resolve
  - RULE-SET,cn_ip,直连
  - MATCH,漏网之鱼

rule-anchor:
  ip: &ip { type: http, interval: 86400, behavior: ipcidr, format: mrs }
  domain: &domain { type: http, interval: 86400, behavior: domain, format: mrs }
  class:
    &class { type: http, interval: 86400, behavior: classical, format: text }
rule-providers:
  private_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"
  direct_domain:
    <<: *class
    url: "https://raw.githubusercontent.com/panlingjin/proxyRuleSet/refs/heads/main/Direct.list"
  proxylite:
    <<: *class
    url: "https://raw.githubusercontent.com/panlingjin/proxyRuleSet/refs/heads/main/ProxyLite.list"
  shouhou:
    <<: *class
    url: "https://raw.githubusercontent.com/panlingjin/proxyRuleSet/refs/heads/main/Shouhou.list"
  apple_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"
  openai_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/openai.mrs"
  cn_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"
  twitter_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/twitter.mrs"
  github_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"
  microsoft_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"
  speedtest_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"
  youtube_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"
  telegram_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"
  netflix_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"
  disney_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/disney.mrs"
  spotify_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"
  steam_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam.mrs"
  epic_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/epicgames.mrs"
  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"
  cn_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"
  netflix_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"
  telegram_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"
  private_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"
  twitter_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.mrs"
